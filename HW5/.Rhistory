predict(model,nlindata,se.fit=TRUE,interval = c("confidence"))
predict(model,nlindata,se.fit=TRUE,interval = c("prediction"))
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
predict(model,nlindata,se.fit=F,interval = c("none"))
predict(model,nlindata,se.fit=F,interval = c("confidence"))
predict(model,nlindata,se.fit=F,interval = c("prediction"))
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
#predict(model,nlindata,se.fit=F,interval = c("none"))
#predict(model,nlindata,se.fit=F,interval = c("confidence"))
#predict(model,nlindata,se.fit=F,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, interval = "prediction")
ci = predict(model, new, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi[,-1]),  type = "l",
ylab = "Max R_Bonds", xlab = "Reaction Cutoff")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
#predict(model,nlindata,se.fit=F,interval = c("none"))
#predict(model,nlindata,se.fit=F,interval = c("confidence"))
#predict(model,nlindata,se.fit=F,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, interval = "prediction")
ci = predict(model, new, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Max R_Bonds", xlab = "Reaction Cutoff")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
#predict(model,nlindata,se.fit=F,interval = c("none"))
#predict(model,nlindata,se.fit=F,interval = c("confidence"))
#predict(model,nlindata,se.fit=F,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, interval = "prediction")
ci = predict(model, new, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, interval = "prediction")
ci = predict(model, new, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, se.fit = TRUE, interval = "prediction")
ci = predict(model, new, se.fit = TRUE, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predictNLS(model, new, se.fit = TRUE, interval = "prediction")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, se.fit = TRUE, interval = "prediction")
ci = predict(model, new, se.fit = TRUE, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
cf=confint(model,level=0.95)
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
cf=confint(model,level=0.95)
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, se.fit = TRUE, interval = "prediction")
ci = predict(model, new, se.fit = TRUE, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
cf=confint2(model,level=0.95)
install.packages("nlstools")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
cf=confint2(model,level=0.95)
library(nlstools)
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
cf=confint2(model,level=0.95)
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, se.fit = TRUE, interval = "prediction")
ci = predict(model, new, se.fit = TRUE, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
cf=confint2(model,level=0.95)
cf
library(stats)
predict(model,nlindata,se.fit=T,interval = c("none"))
predict(model,nlindata,se.fit=T,interval = c("confidence"))
predict(model,nlindata,se.fit=T,interval = c("prediction"))
new = data.frame(x = seq(0, 100, 10))
predict(model, new, se.fit = TRUE)
pi = predict(model, new, se.fit = TRUE, interval = "prediction")
ci = predict(model, new, se.fit = TRUE, interval = "confidence")
#prediction plots
matplot(new$x, cbind(ci, pi),  type = "l",
ylab = "Time", xlab = "Damage")
install.packages("nlsr")
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y, xlab="Time", ylab="Damage")
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(nlstools)
cf=confint2(model,level=0.95)
cf
##problem2a
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=15,b=10,c=0.5))
plot(x,y)
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(nlstools)
cf=confint2(model,level=0.95)
cf
bootstr=nlsBoot(model,niter = 1000)
bootstr=nlsBoot(model,niter = 100)
library(nlstools)
bootstr=nlsBoot(model,niter = 100)
model1=nls(y~a-b*exp(-c*x),start=list(a=0.4,b=0.35,c=0.005))
bootstr=nlsBoot(model1,niter = 100)
View(nlindata)
#model1=nls(y~a-b*exp(-c*x),start=list(a=0.4,b=0.35,c=0.005))
bootstr=nlsBoot(model1,niter = 100)
#model1=nls(y~a-b*exp(-c*x),start=list(a=0.4,b=0.35,c=0.005))
bootstr=nlsBoot(model,niter = 100)
#model1=nls(y~a-b*exp(-c*x),start=list(a=0.4,b=0.35,c=0.005))
bootstr=nlsBoot(model,niter = 100)
library("readxl")
nlindata=read_excel("Hw5_Nlindata.xls")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y, xlab="Time", ylab="Damage")
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(nlstools)
cf=confint2(model,level=0.95)
#library("readxl")
#nlindata=read_excel("Hw5_Nlindata.xls")
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y, xlab="Time", ylab="Damage")
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(nlstools)
cf=confint2(model,level=0.95)
bootstr=nlsBoot(model,niter = 100)
#library("readxl")
#nlindata=read_excel("Hw5_Nlindata.xls")
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y, xlab="Time", ylab="Damage")
lines(x,predict(model),col="red",lty=2,lwd=3)
summary(model)
library(nlstools)
cf=confint2(model,level=0.95)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
bootstr=nlsBoot(model,niter = 100)
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y, xlab="Time", ylab="Damage")
abline(x,predict(lin),col="blue",lty=2,lwd=3)
lines(x,predict(model),col="red",lty=2,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="blue",lty=2,lwd=3)
lines(x,predict(model),col="red",lty=2,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="blue",lty=2,lwd=3)
lines(x,predict(model),col="red",lty=2,lwd=3)
lines(x[j],lw$fitted[j],col="deepskyblue3",lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="blue",lty=1,lwd=3)
lines(x,predict(model),col="red",lty=1,lwd=3)
lines(x[j],lw$fitted[j],col="deepskyblue3",lty=3,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="blue",lty=1,lwd=3)
lines(x,predict(model),col="red",lty=2,lwd=3)
lines(x[j],lw$fitted[j],col="deepskyblue3",lty=3,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="deepskyblue3",lty=1,lwd=3)
lines(x,predict(model),col="olivedrab3",lty=2,lwd=3)
lines(x[j],lw$fitted[j],col="hotpink3",lty=3,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="deepskyblue3",lty=2,lwd=3)
lines(x,predict(model),col="olivedrab3",lty=2,lwd=3)
lines(x[j],lw$fitted[j],col="hotpink3",lty=3,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="deepskyblue3",lty=2,lwd=3)
lines(x,predict(model),col="olivedrab3",lty=2,lwd=3)
lines(x[j],lw$fitted[j],col="hotpink3",lty=1,lwd=3)
nlindata=read.csv("Hw5_Nlindata.csv")
y=nlindata$damage
x=nlindata$time
##starting values a=intercept, b=slope/intercept
lin=lm(y~x,data=nlindata)
model=nls(y~a-b*exp(-c*x),start=list(a=10,b=15,c=0.5))
lw=loess(y ~ x,nlindata, span=.65)
j=order(x)
plot(x,y, xlab="Time", ylab="Damage")
abline(lin,col="deepskyblue3",lty=4,lwd=3)
lines(x,predict(model),col="olivedrab3",lty=2,lwd=3)
lines(x[j],lw$fitted[j],col="hotpink3",lty=1,lwd=3)
##problem2b
#bootstrap
dat<-read.table("Hw5_Nlindata.csv", header = TRUE, sep = ",", na.strings = " ", colClasses = c('numeric', 'numeric'))
setwd("/Users/muhtasim/Desktop/STAT530/HWs/HW5")
##problem2b
#bootstrap
dat<-read.csv("Hw5_Nlindata.csv", header = TRUE, sep = ",", na.strings = " ", colClasses = c('numeric', 'numeric'))
model.fun<- function(dt){
fit<-nls(damage~a-(b*exp(-c*time)), start = list(a=0,b=0.01, c=0.01), data = dt)
df<-dt
df<-data.frame(df,fitted(fit),residuals(fit))
colnames(df)<-c("time", "damage", "fitted", "resid")
fun<-function(df, inds){
library(data.table)
bootDamage=df$fitted +df$resid[inds]
df<-data.frame(df,bootDamage)
colnames(df)<-c("time", "damage", "fitted", "resid", "bootDamage")
tryCatch(coef(nls(bootDamage~a-(b*exp(-c*time)),
start=list(a=0,b=0.01,c=0.01), data=df)),
error=function(e)c("a"= NA, "b"= NA, "c"= NA))
}
kk<-boot(df, fun, R=1000)
print(boot.ci(kk, type="bca", index = 1) )
print(boot.ci(kk, type="bca", index = 2) )
print(boot.ci(kk, type="bca", index = 3) )
res0<-kk$t0
res1<- apply(kk$t, 2, sd, na.rm= TRUE)
res2<- res0 - colMeans(kk$t, na.rm = TRUE)
return(as.list(setNames(c(sum(!is.na(kk$t[,1])), res0, res1, res2), c("n","a","b","c","SD_a","SD_b","SD_c","Bias_a", "Bias_b", "Bias_c"))))
}
models<-model.fun(dat)
models
library(data.table)
library(boot)
models<-model.fun(dat)
models
dat<-read.csv("Hw5_Nlindata.csv", header = TRUE, sep = ",", na.strings = " ", colClasses = c('numeric', 'numeric'))
library(data.table)
library(boot)
model.fun<- function(dt){
fit<-nls(damage~a-(b*exp(-c*time)), start = list(a=0,b=0.01, c=0.01), data = dt)
df<-dt
df<-data.frame(df,fitted(fit),residuals(fit))
colnames(df)<-c("time", "damage", "fitted", "resid")
fun<-function(df, inds){
library(data.table)
bootDamage=df$fitted + df$resid[inds]
df<-data.frame(df,bootDamage)
colnames(df)<-c("time", "damage", "fitted", "resid", "bootDamage")
tryCatch(coef(nls(bootDamage~a-(b*exp(-c*time)),
start=list(a=0,b=0.01,c=0.01), data=df)),
error=function(e)c("a"= NA, "b"= NA, "c"= NA))
}
kk<-boot(df, fun, R=1000)
print(boot.ci(kk, type="bca", index = 1) )
print(boot.ci(kk, type="bca", index = 2) )
print(boot.ci(kk, type="bca", index = 3) )
res0<-kk$t0
res1<- apply(kk$t, 2, sd, na.rm= TRUE)
res2<- res0 - colMeans(kk$t, na.rm = TRUE)
return(as.list(setNames(c(sum(!is.na(kk$t[,1])), res0, res1, res2), c("n","a","b","c","SD_a","SD_b","SD_c","Bias_a", "Bias_b", "Bias_c"))))
}
models<-model.fun(dat)
models
models
models
dat<-read.csv("Hw5_Nlindata.csv", header = TRUE, sep = ",", na.strings = " ", colClasses = c('numeric', 'numeric'))
library(data.table)
library(boot)
model.fun<- function(dt){
fit<-nls(damage~a-(b*exp(-c*time)), start = list(a=0,b=0.01, c=0.01), data = dt)
df<-dt
df<-data.frame(df,fitted(fit),residuals(fit))
colnames(df)<-c("time", "damage", "fitted", "resid")
fun<-function(df, inds){
library(data.table)
bootDamage=df$fitted + df$resid[inds]
df<-data.frame(df,bootDamage)
colnames(df)<-c("time", "damage", "fitted", "resid", "bootDamage")
tryCatch(coef(nls(bootDamage~a-(b*exp(-c*time)),
start=list(a=0,b=0.01,c=0.01), data=df)),
error=function(e)c("a"= NA, "b"= NA, "c"= NA))
}
kk<-boot(df, fun, R=1000)
print(boot.ci(kk, type="bca", index = 1) )
print(boot.ci(kk, type="bca", index = 2) )
print(boot.ci(kk, type="bca", index = 3) )
res0<-kk$t0
res1<- apply(kk$t, 2, sd, na.rm= TRUE)
res2<- res0 - colMeans(kk$t, na.rm = TRUE)
return(as.list(setNames(c(sum(!is.na(kk$t[,1])), res0, res1, res2),     c("n","a","b","c","SD_a","SD_b","SD_c","Bias_a", "Bias_b", "Bias_c"))))
}
models<-model.fun(dat)
